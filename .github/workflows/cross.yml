name: ezkl-lib-release
on:
  push:
    tags:
      - '*'

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            rust: stable
          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            rust: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            rust: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rust: stable
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            rust: stable
          - os: windows-latest
            target: i686-pc-windows-msvc
            rust: stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install Cross
        run: cargo install cross

      - name: Build Release
        run: cross build --target ${{ matrix.target }} --release

      - name: Archive
        id: archive
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          TARGET=${{ matrix.target }}
          if [[ $TARGET == *"windows"* ]]; then
            mv target/$TARGET/release/ezkl_lib.exe ezkl_lib-$VERSION-$TARGET.exe
            7z a ezkl_lib-$VERSION-$TARGET.zip ezkl_lib-$VERSION-$TARGET.exe
            echo "::set-output name=path::$(pwd)/ezkl_lib-$VERSION-$TARGET.zip"
          else
            mv target/$TARGET/release/ezkl_lib ezkl_lib-$VERSION-$TARGET
            tar czvf ezkl_lib-$VERSION-$TARGET.tar.gz ezkl_lib-$VERSION-$TARGET
            echo "::set-output name=path::$(pwd)/ezkl_lib-$VERSION-$TARGET.tar.gz"
          fi

      - name: Create Release
        run: |
          gh release create $VERSION --title "Release $VERSION" --notes "Release $VERSION"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        run: |
          gh release upload $VERSION ${{ steps.archive.outputs.path }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
